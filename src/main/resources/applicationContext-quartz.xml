<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd"> 
     
    <!-- quartz分布式集群定时任务-配置 -->
    
    
    <!-- 启动触发器的配置开始 -->
    <bean name="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 分布式集群中必须写这个properties配置文件 -->
        <property name="configLocation" value="classpath:quartz.properties" />
        <!-- Job接受applicationContext的成员变量名 -->
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <property name="schedulerName" value="quartzScheduler" />
        <!-- 数据源 -->
        <property name="nonTransactionalDataSource" ref="datasource_orcl" />
        <!-- Triggers集成 -->
        <property name="triggers">
            <list>
            	<ref bean="calRatingOverTimeTrigger" />
            </list>
        </property>
        <!-- 修改job时，更新到数据库 -->
        <property name="overwriteExistingJobs" value="true" />
    	<property name="quartzProperties"> 
			 <props>
			 	<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop> 
			 </props>
		</property>    
    </bean>
    <!-- 启动触发器的配置结束 -->
 
    <!-- quartz-2.x的配置 -->
    <bean id="calRatingOverTimeTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="calRatingJobDetail" />
        </property>
        <property name="cronExpression">
            <!--middle night 24. do it  -->
            <value>*/30 * * * * ?</value>
        </property>
    </bean>
    <!-- 调度的配置结束 -->
    
    <!-- job的配置开始 -->
    <bean id="calRatingJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
    	<property name="jobClass">
    		<value>com.quartz.MyDetailQuartzJobBean</value>
    	</property>
    	<property name="jobDataMap">
    		<map>
    			<entry key="targetObject" value="creditRatingCal"></entry>
    			<entry key="targetMethod" value="calTheRatingOverTime"></entry>
    		</map>
    	</property>
    	<!-- 表示任务完成之后是否依然保留到数据库，默认false   -->
    	<property name="durability" value="true" />
    </bean>
    


<!-- Quartz配置结束 -->    
</beans>